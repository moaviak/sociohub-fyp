// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Student {
  id                      String    @id @default(uuid())
  firstName               String
  lastName                String
  email                   String    @unique
  registrationNumber      String?   @unique
  password                String
  avatar                  String?
  refreshToken            String?
  isEmailVerified         Boolean   @default(false)
  emailVerificationCode   String?
  emailVerificationExpiry DateTime?
  createdAt               DateTime  @default(now())
  updatedAt               DateTime  @updatedAt
}

model Advisor {
  id                      String    @id @default(uuid())
  firstName               String
  lastName                String
  displayName             String
  email                   String    @unique
  password                String
  avatar                  String?
  refreshToken            String?
  isEmailVerified         Boolean   @default(false)
  emailVerificationCode   String?
  emailVerificationExpiry DateTime?
  createdAt               DateTime  @default(now())
  updatedAt               DateTime  @updatedAt
  societyId               String?   @unique
  society                 Society?  @relation(fields: [societyId], references: [id], onDelete: SetNull)

  @@index([societyId])
}

model Society {
  id          String   @id @default(uuid())
  name        String
  description String
  logo        String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  advisor     Advisor? @relation
}

model SocietyAdvisor {
  id          String   @id @default(uuid())
  firstName   String
  lastName    String
  displayName String
  email       String   @unique
  society     String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
